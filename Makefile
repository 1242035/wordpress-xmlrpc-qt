#############################################################################
# Makefile for building: myxmlrpc
# Generated by qmake (2.01a) (Qt 4.7.0) on: Tue Dec 4 07:49:46 2012
# Project:  myxmlrpc.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile myxmlrpc.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtUiTools -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4/QtSql -I/usr/include/qt4 -I. -Isrc -Isrc/inc -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtSql -lQtXml -lQtGui -lQtNetwork -lQtCore -lQtUiTools -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = src/addblog.cpp \
		src/base.cpp \
		src/category.cpp \
		src/comment.cpp \
		src/database.cpp \
		src/enclosure.cpp \
		src/main.cpp \
		src/media.cpp \
		src/myapp.cpp \
		src/option.cpp \
		src/page.cpp \
		src/post.cpp \
		src/postcustomfield.cpp \
		src/postfilter.cpp \
		src/tag.cpp \
		src/taxonomy.cpp \
		src/term.cpp \
		src/userblog.cpp \
		src/user.cpp \
		src/wordpress.cpp \
		src/mvariant.cpp \
		src/cap.cpp \
		src/labels.cpp \
		src/inc/client.cpp \
		src/inc/request.cpp \
		src/inc/response.cpp \
		src/inc/server.cpp \
		src/inc/serverintrospection.cpp \
		src/inc/variant.cpp moc_addblog.cpp \
		moc_base.cpp \
		moc_category.cpp \
		moc_comment.cpp \
		moc_media.cpp \
		moc_myapp.cpp \
		moc_option.cpp \
		moc_page.cpp \
		moc_post.cpp \
		moc_tag.cpp \
		moc_taxonomy.cpp \
		moc_term.cpp \
		moc_userblog.cpp \
		moc_user.cpp \
		moc_wordpress.cpp \
		moc_client.cpp \
		moc_server.cpp \
		moc_server_private.cpp
OBJECTS       = addblog.o \
		base.o \
		category.o \
		comment.o \
		database.o \
		enclosure.o \
		main.o \
		media.o \
		myapp.o \
		option.o \
		page.o \
		post.o \
		postcustomfield.o \
		postfilter.o \
		tag.o \
		taxonomy.o \
		term.o \
		userblog.o \
		user.o \
		wordpress.o \
		mvariant.o \
		cap.o \
		labels.o \
		client.o \
		request.o \
		response.o \
		server.o \
		serverintrospection.o \
		variant.o \
		moc_addblog.o \
		moc_base.o \
		moc_category.o \
		moc_comment.o \
		moc_media.o \
		moc_myapp.o \
		moc_option.o \
		moc_page.o \
		moc_post.o \
		moc_tag.o \
		moc_taxonomy.o \
		moc_term.o \
		moc_userblog.o \
		moc_user.o \
		moc_wordpress.o \
		moc_client.o \
		moc_server.o \
		moc_server_private.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/uitools.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		myxmlrpc.pro
QMAKE_TARGET  = myxmlrpc
DESTDIR       = 
TARGET        = myxmlrpc

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_dlgaddblog.h ui_frmmain.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: myxmlrpc.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/uitools.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtSql.prl \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl \
		/usr/lib/libQtUiTools.prl
	$(QMAKE) -o Makefile myxmlrpc.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/uitools.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtSql.prl:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
/usr/lib/libQtUiTools.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile myxmlrpc.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/myxmlrpc1.0.0 || $(MKDIR) .tmp/myxmlrpc1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/myxmlrpc1.0.0/ && $(COPY_FILE) --parents src/addblog.h src/base.h src/category.h src/comment.h src/database.h src/enclosure.h src/media.h src/myapp.h src/option.h src/page.h src/post.h src/postcustomfield.h src/postfilter.h src/tag.h src/taxonomy.h src/term.h src/userblog.h src/user.h src/wordpress.h src/mvariant.h src/cap.h src/labels.h src/inc/client.h src/inc/debug.h src/inc/qxmlrpc_documentation.h src/inc/request.h src/inc/response.h src/inc/server.h src/inc/server_private.h src/inc/serverintrospection.h src/inc/stable.h src/inc/variant.h .tmp/myxmlrpc1.0.0/ && $(COPY_FILE) --parents src/addblog.cpp src/base.cpp src/category.cpp src/comment.cpp src/database.cpp src/enclosure.cpp src/main.cpp src/media.cpp src/myapp.cpp src/option.cpp src/page.cpp src/post.cpp src/postcustomfield.cpp src/postfilter.cpp src/tag.cpp src/taxonomy.cpp src/term.cpp src/userblog.cpp src/user.cpp src/wordpress.cpp src/mvariant.cpp src/cap.cpp src/labels.cpp src/inc/client.cpp src/inc/request.cpp src/inc/response.cpp src/inc/server.cpp src/inc/serverintrospection.cpp src/inc/variant.cpp .tmp/myxmlrpc1.0.0/ && $(COPY_FILE) --parents ui/dlgaddblog.ui ui/frmmain.ui .tmp/myxmlrpc1.0.0/ && (cd `dirname .tmp/myxmlrpc1.0.0` && $(TAR) myxmlrpc1.0.0.tar myxmlrpc1.0.0 && $(COMPRESS) myxmlrpc1.0.0.tar) && $(MOVE) `dirname .tmp/myxmlrpc1.0.0`/myxmlrpc1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/myxmlrpc1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_addblog.cpp moc_base.cpp moc_category.cpp moc_comment.cpp moc_media.cpp moc_myapp.cpp moc_option.cpp moc_page.cpp moc_post.cpp moc_tag.cpp moc_taxonomy.cpp moc_term.cpp moc_userblog.cpp moc_user.cpp moc_wordpress.cpp moc_client.cpp moc_server.cpp moc_server_private.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_addblog.cpp moc_base.cpp moc_category.cpp moc_comment.cpp moc_media.cpp moc_myapp.cpp moc_option.cpp moc_page.cpp moc_post.cpp moc_tag.cpp moc_taxonomy.cpp moc_term.cpp moc_userblog.cpp moc_user.cpp moc_wordpress.cpp moc_client.cpp moc_server.cpp moc_server_private.cpp
moc_addblog.cpp: ui_dlgaddblog.h \
		src/database.h \
		src/inc/debug.h \
		src/base.h \
		src/inc/client.h \
		src/inc/variant.h \
		src/addblog.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/addblog.h -o moc_addblog.cpp

moc_base.cpp: src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/base.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/base.h -o moc_base.cpp

moc_category.cpp: src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h \
		src/category.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/category.h -o moc_category.cpp

moc_comment.cpp: src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h \
		src/comment.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/comment.h -o moc_comment.cpp

moc_media.cpp: src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h \
		src/media.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/media.h -o moc_media.cpp

moc_myapp.cpp: ui_frmmain.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/addblog.h \
		ui_dlgaddblog.h \
		src/myapp.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/myapp.h -o moc_myapp.cpp

moc_option.cpp: src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h \
		src/option.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/option.h -o moc_option.cpp

moc_page.cpp: src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/category.h \
		src/userblog.h \
		src/mvariant.h \
		src/postcustomfield.h \
		src/page.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/page.h -o moc_page.cpp

moc_post.cpp: src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h \
		src/media.h \
		src/term.h \
		src/enclosure.h \
		src/postcustomfield.h \
		src/post.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/post.h -o moc_post.cpp

moc_tag.cpp: src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h \
		src/tag.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/tag.h -o moc_tag.cpp

moc_taxonomy.cpp: src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h \
		src/cap.h \
		src/labels.h \
		src/taxonomy.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/taxonomy.h -o moc_taxonomy.cpp

moc_term.cpp: src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h \
		src/term.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/term.h -o moc_term.cpp

moc_userblog.cpp: src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h \
		src/userblog.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/userblog.h -o moc_userblog.cpp

moc_user.cpp: src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h \
		src/user.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/user.h -o moc_user.cpp

moc_wordpress.cpp: src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/wordpress.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/wordpress.h -o moc_wordpress.cpp

moc_client.cpp: src/inc/debug.h \
		src/inc/variant.h \
		src/inc/client.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/inc/client.h -o moc_client.cpp

moc_server.cpp: src/inc/variant.h \
		src/inc/server.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/inc/server.h -o moc_server.cpp

moc_server_private.cpp: src/inc/variant.h \
		src/inc/server_private.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/inc/server_private.h -o moc_server_private.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_dlgaddblog.h ui_frmmain.h
compiler_uic_clean:
	-$(DEL_FILE) ui_dlgaddblog.h ui_frmmain.h
ui_dlgaddblog.h: ui/dlgaddblog.ui
	/usr/bin/uic-qt4 ui/dlgaddblog.ui -o ui_dlgaddblog.h

ui_frmmain.h: ui/frmmain.ui
	/usr/bin/uic-qt4 ui/frmmain.ui -o ui_frmmain.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

addblog.o: src/addblog.cpp src/addblog.h \
		ui_dlgaddblog.h \
		src/database.h \
		src/inc/debug.h \
		src/base.h \
		src/inc/client.h \
		src/inc/variant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o addblog.o src/addblog.cpp

base.o: src/base.cpp src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o base.o src/base.cpp

category.o: src/category.cpp src/category.h \
		src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o category.o src/category.cpp

comment.o: src/comment.cpp src/comment.h \
		src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o comment.o src/comment.cpp

database.o: src/database.cpp src/database.h \
		src/inc/debug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o database.o src/database.cpp

enclosure.o: src/enclosure.cpp src/enclosure.h \
		src/inc/debug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o enclosure.o src/enclosure.cpp

main.o: src/main.cpp src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/tag.h \
		src/userblog.h \
		src/mvariant.h \
		src/option.h \
		src/comment.h \
		src/category.h \
		src/user.h \
		src/media.h \
		src/taxonomy.h \
		src/cap.h \
		src/labels.h \
		src/post.h \
		src/term.h \
		src/enclosure.h \
		src/postcustomfield.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o src/main.cpp

media.o: src/media.cpp src/media.h \
		src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o media.o src/media.cpp

myapp.o: src/myapp.cpp src/myapp.h \
		ui_frmmain.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/addblog.h \
		ui_dlgaddblog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myapp.o src/myapp.cpp

option.o: src/option.cpp src/option.h \
		src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o option.o src/option.cpp

page.o: src/page.cpp src/page.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/category.h \
		src/userblog.h \
		src/mvariant.h \
		src/postcustomfield.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o page.o src/page.cpp

post.o: src/post.cpp src/post.h \
		src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h \
		src/media.h \
		src/term.h \
		src/enclosure.h \
		src/postcustomfield.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o post.o src/post.cpp

postcustomfield.o: src/postcustomfield.cpp src/postcustomfield.h \
		src/inc/debug.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/variant.h \
		src/database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o postcustomfield.o src/postcustomfield.cpp

postfilter.o: src/postfilter.cpp src/postfilter.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o postfilter.o src/postfilter.cpp

tag.o: src/tag.cpp src/tag.h \
		src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tag.o src/tag.cpp

taxonomy.o: src/taxonomy.cpp src/taxonomy.h \
		src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h \
		src/cap.h \
		src/labels.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o taxonomy.o src/taxonomy.cpp

term.o: src/term.cpp src/term.h \
		src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o term.o src/term.cpp

userblog.o: src/userblog.cpp src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o userblog.o src/userblog.cpp

user.o: src/user.cpp src/user.h \
		src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o user.o src/user.cpp

wordpress.o: src/wordpress.cpp src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wordpress.o src/wordpress.cpp

mvariant.o: src/mvariant.cpp src/mvariant.h \
		src/inc/debug.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mvariant.o src/mvariant.cpp

cap.o: src/cap.cpp src/cap.h \
		src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cap.o src/cap.cpp

labels.o: src/labels.cpp src/labels.h \
		src/userblog.h \
		src/wordpress.h \
		src/base.h \
		src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/database.h \
		src/mvariant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o labels.o src/labels.cpp

client.o: src/inc/client.cpp src/inc/client.h \
		src/inc/debug.h \
		src/inc/variant.h \
		src/inc/request.h \
		src/inc/response.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o client.o src/inc/client.cpp

request.o: src/inc/request.cpp src/inc/request.h \
		src/inc/variant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o request.o src/inc/request.cpp

response.o: src/inc/response.cpp src/inc/response.h \
		src/inc/variant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o response.o src/inc/response.cpp

server.o: src/inc/server.cpp src/inc/server.h \
		src/inc/variant.h \
		src/inc/server_private.h \
		src/inc/request.h \
		src/inc/response.h \
		src/inc/serverintrospection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o server.o src/inc/server.cpp

serverintrospection.o: src/inc/serverintrospection.cpp src/inc/serverintrospection.h \
		src/inc/variant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serverintrospection.o src/inc/serverintrospection.cpp

variant.o: src/inc/variant.cpp src/inc/variant.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o variant.o src/inc/variant.cpp

moc_addblog.o: moc_addblog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_addblog.o moc_addblog.cpp

moc_base.o: moc_base.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_base.o moc_base.cpp

moc_category.o: moc_category.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_category.o moc_category.cpp

moc_comment.o: moc_comment.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_comment.o moc_comment.cpp

moc_media.o: moc_media.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_media.o moc_media.cpp

moc_myapp.o: moc_myapp.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_myapp.o moc_myapp.cpp

moc_option.o: moc_option.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_option.o moc_option.cpp

moc_page.o: moc_page.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_page.o moc_page.cpp

moc_post.o: moc_post.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_post.o moc_post.cpp

moc_tag.o: moc_tag.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tag.o moc_tag.cpp

moc_taxonomy.o: moc_taxonomy.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_taxonomy.o moc_taxonomy.cpp

moc_term.o: moc_term.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_term.o moc_term.cpp

moc_userblog.o: moc_userblog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_userblog.o moc_userblog.cpp

moc_user.o: moc_user.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_user.o moc_user.cpp

moc_wordpress.o: moc_wordpress.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_wordpress.o moc_wordpress.cpp

moc_client.o: moc_client.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_client.o moc_client.cpp

moc_server.o: moc_server.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_server.o moc_server.cpp

moc_server_private.o: moc_server_private.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_server_private.o moc_server_private.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

